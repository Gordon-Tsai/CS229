# -*- coding: utf-8 -*-
"""Incorrect_Prediction_Detector.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D2_pyBL3KTO4oLBVz97rxzn8Cy9NyNoo
"""

#This function return information for false Positive and False negative distribution
def False_positive_negative(X_test,y_predict,y_test):
  data_new = X_test.copy()
  data_new['y_predict'] = y_predict
  data_new['y_test'] = y_test
  False_positive_a = data_new.query('y_predict == 1 and y_test == 0')
  False_negative_a = data_new.query('y_predict == 0 and y_test == 1')

  False_positive = []
  False_negative = []
  for i in False_positive_a.columns:
    False_positive.append((i, np.mean(False_positive_a[i])))


  for i in False_negative_a.columns:
    False_negative.append((i,np.mean(False_negative_a[i])))

  return False_positive, False_negative

# this function return feature that both False positive and False negative are higher than 0.65
def Cutoff(False_positive,False_negative):
  i = 0
  Feature = []
  for i in range(len(False_positive)):
    if False_positive[i][1] >=0.6 and False_negative[i][1] >= 0.6:
      Feature.append(False_positive[i][0])
  return Feature

FP,FN = False_positive_negative(X_test,y_predict,y_test)
Cutoff_LR = Cutoff(FP,FN)